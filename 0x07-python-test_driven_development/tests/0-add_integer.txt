This text file tests a function that adds two integers

>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(-6, 2)
-4

>>> add_integer(-4, -5)
-9

>>> add_integer(0)
98

>>> add_integer(1.2, 7.2)
8

>>> add_integer(999999999999, 1)
1000000000000

>>> add_integer([0, 1])
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer("testingisdumb")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(2,"aaaaa")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(8, float('nan'))
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(float('inf'), 90)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
